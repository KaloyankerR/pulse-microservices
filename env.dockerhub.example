# Environment variables for Docker Hub deployment
# Copy this file to .env and update with your values
# cp env.dockerhub.example .env

# =============================================================================
# Docker Hub Configuration
# =============================================================================
DOCKERHUB_USERNAME=yourusername

# =============================================================================
# Security
# =============================================================================
# JWT Secret (REQUIRED - Change this!)
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production

# JWT expiration time
JWT_EXPIRES_IN=7d

# =============================================================================
# Service Versions (optional - defaults to 'latest')
# =============================================================================
USER_SERVICE_VERSION=latest
SOCIAL_SERVICE_VERSION=latest
MESSAGING_SERVICE_VERSION=latest
POST_SERVICE_VERSION=latest
NOTIFICATION_SERVICE_VERSION=latest

# =============================================================================
# Database Configuration
# =============================================================================
# PostgreSQL
POSTGRES_USER=pulse_user
POSTGRES_PASSWORD=pulse_user
POSTGRES_HOST=host.docker.internal
POSTGRES_PORT=5432

# Database URLs (constructed from above, but can be overridden)
USER_DB_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/pulse_users
SOCIAL_DB_URL=postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/pulse_social
POST_DB_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/pulse_posts?sslmode=disable
MESSAGING_DB_URL=postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/pulse_messaging?sslmode=disable

# MongoDB (for notifications)
MONGODB_USER=pulse_user
MONGODB_PASSWORD=pulse_user
MONGODB_HOST=mongodb
MONGODB_PORT=27017
MONGODB_DATABASE=pulse_notifications
MONGODB_URI=mongodb://${MONGODB_USER}:${MONGODB_PASSWORD}@${MONGODB_HOST}:${MONGODB_PORT}/${MONGODB_DATABASE}?authSource=admin

# =============================================================================
# Redis Configuration
# =============================================================================
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_URL=redis://${REDIS_HOST}:${REDIS_PORT}

# =============================================================================
# RabbitMQ Configuration
# =============================================================================
RABBITMQ_USER=guest
RABBITMQ_PASSWORD=guest
RABBITMQ_HOST=rabbitmq
RABBITMQ_PORT=5672
RABBITMQ_URL=amqp://${RABBITMQ_USER}:${RABBITMQ_PASSWORD}@${RABBITMQ_HOST}:${RABBITMQ_PORT}/

# =============================================================================
# Service Ports
# =============================================================================
USER_SERVICE_PORT=8081
POST_SERVICE_PORT=8082
MESSAGING_SERVICE_PORT=8084
SOCIAL_SERVICE_PORT=8085
NOTIFICATION_SERVICE_PORT=8086
KONG_PROXY_PORT=8000
KONG_ADMIN_PORT=8001
PROMETHEUS_PORT=9090
GRAFANA_PORT=3001

# =============================================================================
# OAuth Configuration (optional)
# =============================================================================
# Google OAuth
GOOGLE_CLIENT_ID=
GOOGLE_CLIENT_SECRET=
GOOGLE_CALLBACK_URL=http://localhost:8081/api/v1/auth/google/callback

# GitHub OAuth (optional)
GITHUB_CLIENT_ID=
GITHUB_CLIENT_SECRET=
GITHUB_CALLBACK_URL=http://localhost:8081/api/v1/auth/github/callback

# =============================================================================
# Monitoring & Logging
# =============================================================================
# Log level (debug, info, warn, error)
LOG_LEVEL=info

# Grafana
GF_SECURITY_ADMIN_USER=admin
GF_SECURITY_ADMIN_PASSWORD=admin

# =============================================================================
# Application Configuration
# =============================================================================
# Node environment
NODE_ENV=production

# API Rate Limiting
RATE_LIMIT_WINDOW_MS=900000
RATE_LIMIT_MAX_REQUESTS=100

# =============================================================================
# Email Configuration (optional)
# =============================================================================
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
SMTP_FROM_EMAIL=noreply@pulse.example.com

# =============================================================================
# Cloud Storage (optional)
# =============================================================================
# AWS S3
AWS_ACCESS_KEY_ID=
AWS_SECRET_ACCESS_KEY=
AWS_REGION=us-east-1
AWS_S3_BUCKET=

# =============================================================================
# Feature Flags
# =============================================================================
ENABLE_WEBSOCKETS=true
ENABLE_NOTIFICATIONS=true
ENABLE_EMAIL_VERIFICATION=false
ENABLE_TWO_FACTOR_AUTH=false

# =============================================================================
# Development Settings
# =============================================================================
# Set to 'true' for development mode features
DEBUG_MODE=false
ENABLE_CORS=true
ALLOWED_ORIGINS=http://localhost:3000,http://localhost:8000

# =============================================================================
# Notes
# =============================================================================
# 1. NEVER commit this file with real credentials to version control
# 2. For production, use a secrets management system (e.g., AWS Secrets Manager)
# 3. Rotate JWT_SECRET regularly
# 4. Enable SSL/TLS for production deployments
# 5. Update ALLOWED_ORIGINS for your frontend application

