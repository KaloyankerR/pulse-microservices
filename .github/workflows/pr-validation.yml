name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  validate-pr:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Check PR title
        uses: amannn/action-semantic-pull-request@v5
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          types: |
            feat
            fix
            docs
            style
            refactor
            perf
            test
            build
            ci
            chore
            revert
          scopes: |
            user-service
            social-service
            messaging-service
            post-service
            infra
            docs
          requireScope: false
      
      - name: Check for merge conflicts
        run: |
          git fetch origin ${{ github.base_ref }}
          if git merge-tree $(git merge-base HEAD origin/${{ github.base_ref }}) HEAD origin/${{ github.base_ref }} | grep -q '<<<<<<<'; then
            echo "‚ùå Merge conflicts detected"
            exit 1
          fi
          echo "‚úÖ No merge conflicts"
      
      - name: Validate file structure
        run: |
          # Check for common issues
          if find . -name "*.env" ! -name "*.example" ! -path "./node_modules/*" ! -path "./.git/*" | grep -q .; then
            echo "‚ùå Found .env files (should be .env.example)"
            find . -name "*.env" ! -name "*.example" ! -path "./node_modules/*" ! -path "./.git/*"
            exit 1
          fi
          echo "‚úÖ No .env files committed"
      
      - name: Check file size
        run: |
          # Check for large files (>10MB)
          large_files=$(find . -type f -size +10M ! -path "./node_modules/*" ! -path "./.git/*" ! -path "./coverage/*")
          if [ -n "$large_files" ]; then
            echo "‚ùå Found large files (>10MB):"
            echo "$large_files"
            exit 1
          fi
          echo "‚úÖ No large files detected"
      
      - name: PR Size Check
        run: |
          added=$(git diff --numstat origin/${{ github.base_ref }}...HEAD | awk '{sum+=$1} END {print sum}')
          deleted=$(git diff --numstat origin/${{ github.base_ref }}...HEAD | awk '{sum+=$2} END {print sum}')
          total=$((added + deleted))
          
          echo "üìä PR Statistics:"
          echo "  Lines added: $added"
          echo "  Lines deleted: $deleted"
          echo "  Total changes: $total"
          
          if [ $total -gt 1000 ]; then
            echo "‚ö†Ô∏è  Large PR detected ($total lines changed)"
            echo "Consider breaking this into smaller PRs for easier review"
          else
            echo "‚úÖ PR size looks good"
          fi

  lint-commit-messages:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
      
      - name: Install commitlint
        run: |
          npm install -g @commitlint/cli @commitlint/config-conventional
      
      - name: Validate commit messages
        run: |
          npx commitlint --from origin/${{ github.base_ref }} --to HEAD --verbose
        continue-on-error: true

  security-scan:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service: [user-service, social-service, messaging-service, post-service]
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      # Node.js security scan
      - name: Run npm audit (Node services)
        if: matrix.service == 'user-service' || matrix.service == 'social-service'
        working-directory: ./${{ matrix.service }}
        run: |
          npm audit --audit-level=moderate
        continue-on-error: true
      
      # Go security scan
      - name: Run Gosec Security Scanner (Go services)
        if: matrix.service == 'messaging-service' || matrix.service == 'post-service'
        uses: securego/gosec@master
        with:
          args: '-no-fail -fmt json -out gosec-report.json ./${{ matrix.service }}/...'
        continue-on-error: true
      
      - name: Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './${{ matrix.service }}'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'
        continue-on-error: true
      
      - name: Upload Trivy results to GitHub Security
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'
        if: always()
        continue-on-error: true

  comment-pr:
    needs: [validate-pr, security-scan]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Comment PR
        uses: actions/github-script@v7
        with:
          script: |
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('PR Validation Summary')
            );
            
            const validationStatus = '${{ needs.validate-pr.result }}';
            const securityStatus = '${{ needs.security-scan.result }}';
            
            const statusEmoji = {
              'success': '‚úÖ',
              'failure': '‚ùå',
              'cancelled': '‚ö†Ô∏è',
              'skipped': '‚è≠Ô∏è'
            };
            
            const body = `## PR Validation Summary
            
            - ${statusEmoji[validationStatus] || '‚ùì'} **Validation**: ${validationStatus}
            - ${statusEmoji[securityStatus] || '‚ùì'} **Security Scan**: ${securityStatus}
            
            ${validationStatus === 'success' && securityStatus === 'success' 
              ? 'üéâ All checks passed! Ready for review.' 
              : '‚ö†Ô∏è Some checks failed. Please review the details above.'}
            
            ---
            *This comment is automatically updated on every push.*
            `;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: body
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: context.issue.number,
                body: body
              });
            }

