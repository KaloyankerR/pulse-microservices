name: Deploy to Docker Hub

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'
      - '*-service-v*.*.*'
  workflow_dispatch:
    inputs:
      service:
        description: 'Service to deploy (or "all" for all services)'
        required: true
        type: choice
        options:
          - all
          - user-service
          - social-service
          - messaging-service
          - post-service
          - notification-service
      environment:
        description: 'Deployment environment'
        required: true
        type: choice
        options:
          - production
          - staging
        default: 'staging'

env:
  DOCKER_REGISTRY: docker.io
  DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  # Determine which services to deploy
  determine-services:
    name: Determine Services to Deploy
    runs-on: ubuntu-latest
    outputs:
      services: ${{ steps.set-services.outputs.services }}
      deploy_all: ${{ steps.set-services.outputs.deploy_all }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 2
      
      - name: Determine services
        id: set-services
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" ]]; then
            # Manual trigger
            if [[ "${{ github.event.inputs.service }}" == "all" ]]; then
              echo "services=[\"user-service\",\"social-service\",\"messaging-service\",\"post-service\",\"notification-service\"]" >> $GITHUB_OUTPUT
              echo "deploy_all=true" >> $GITHUB_OUTPUT
            else
              echo "services=[\"${{ github.event.inputs.service }}\"]" >> $GITHUB_OUTPUT
              echo "deploy_all=false" >> $GITHUB_OUTPUT
            fi
          elif [[ "${{ github.ref }}" == refs/tags/* ]]; then
            # Tag-based deployment
            TAG="${{ github.ref_name }}"
            if [[ "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              # Full version tag (e.g., v1.0.0) - deploy all services
              echo "services=[\"user-service\",\"social-service\",\"messaging-service\",\"post-service\",\"notification-service\"]" >> $GITHUB_OUTPUT
              echo "deploy_all=true" >> $GITHUB_OUTPUT
            else
              # Service-specific tag (e.g., user-service-v1.0.0)
              SERVICE=$(echo "$TAG" | sed 's/-v[0-9].*//')
              echo "services=[\"$SERVICE\"]" >> $GITHUB_OUTPUT
              echo "deploy_all=false" >> $GITHUB_OUTPUT
            fi
          else
            # Push to main - deploy all services
            echo "services=[\"user-service\",\"social-service\",\"messaging-service\",\"post-service\",\"notification-service\"]" >> $GITHUB_OUTPUT
            echo "deploy_all=true" >> $GITHUB_OUTPUT
          fi

  # Build and push Docker images
  build-and-push:
    name: Build & Push ${{ matrix.service }}
    runs-on: ubuntu-latest
    needs: determine-services
    
    strategy:
      fail-fast: false
      matrix:
        service: ${{ fromJson(needs.determine-services.outputs.services) }}
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata
        id: meta
        run: |
          SERVICE="${{ matrix.service }}"
          
          # Base image name
          IMAGE_NAME="${{ secrets.DOCKERHUB_USERNAME }}/pulse-${SERVICE}"
          
          # Determine version and tags
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            TAG="${{ github.ref_name }}"
            if [[ "$TAG" =~ ^v[0-9]+\.[0-9]+\.[0-9]+$ ]]; then
              # Full version tag (e.g., v1.0.0)
              VERSION="${TAG#v}"
              TAGS="${IMAGE_NAME}:${VERSION},${IMAGE_NAME}:latest"
            else
              # Service-specific tag (e.g., user-service-v1.0.0)
              VERSION=$(echo "$TAG" | sed 's/.*-v//')
              TAGS="${IMAGE_NAME}:${VERSION},${IMAGE_NAME}:latest"
            fi
          else
            # Push to main branch
            SHORT_SHA=$(git rev-parse --short HEAD)
            TAGS="${IMAGE_NAME}:${SHORT_SHA},${IMAGE_NAME}:latest"
            VERSION="${SHORT_SHA}"
          fi
          
          echo "image_name=${IMAGE_NAME}" >> $GITHUB_OUTPUT
          echo "tags=${TAGS}" >> $GITHUB_OUTPUT
          echo "version=${VERSION}" >> $GITHUB_OUTPUT
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ./${{ matrix.service }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          labels: |
            org.opencontainers.image.title=pulse-${{ matrix.service }}
            org.opencontainers.image.description=Pulse Microservices - ${{ matrix.service }}
            org.opencontainers.image.version=${{ steps.meta.outputs.version }}
            org.opencontainers.image.source=${{ github.server_url }}/${{ github.repository }}
            org.opencontainers.image.revision=${{ github.sha }}
            org.opencontainers.image.created=${{ github.event.head_commit.timestamp }}
      
      - name: Image digest
        run: |
          echo "📦 Successfully pushed ${{ matrix.service }}"
          echo "🏷️  Tags: ${{ steps.meta.outputs.tags }}"
          echo "📋 Image: ${{ steps.meta.outputs.image_name }}"

  # Update deployment summary
  deployment-summary:
    name: Deployment Summary
    runs-on: ubuntu-latest
    needs: [determine-services, build-and-push]
    if: always()
    
    steps:
      - name: Create summary
        run: |
          echo "# 🚀 Docker Hub Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Trigger**: ${{ github.event_name }}" >> $GITHUB_STEP_SUMMARY
          echo "**Ref**: ${{ github.ref }}" >> $GITHUB_STEP_SUMMARY
          echo "**SHA**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [[ "${{ needs.build-and-push.result }}" == "success" ]]; then
            echo "✅ **Status**: All images built and pushed successfully!" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Status**: Some deployments failed" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Deployed Services" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          SERVICES='${{ needs.determine-services.outputs.services }}'
          echo "$SERVICES" | jq -r '.[]' | while read service; do
            echo "- 📦 \`${service}\`: https://hub.docker.com/r/${{ secrets.DOCKERHUB_USERNAME }}/pulse-${service}" >> $GITHUB_STEP_SUMMARY
          done
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Pull Commands" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo '```bash' >> $GITHUB_STEP_SUMMARY
          
          SERVICES='${{ needs.determine-services.outputs.services }}'
          echo "$SERVICES" | jq -r '.[]' | while read service; do
            echo "docker pull ${{ secrets.DOCKERHUB_USERNAME }}/pulse-${service}:latest" >> $GITHUB_STEP_SUMMARY
          done
          
          echo '```' >> $GITHUB_STEP_SUMMARY
      
      - name: Notify on failure
        if: needs.build-and-push.result == 'failure'
        run: |
          echo "::error::Docker Hub deployment failed for one or more services"
          exit 1

