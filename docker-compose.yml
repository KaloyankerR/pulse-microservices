services:
  # Kong API Gateway (DB-less mode)
  kong:
    image: kong:3.4
    container_name: kong-gateway
    environment:
      KONG_DATABASE: "off"
      KONG_DECLARATIVE_CONFIG: /kong/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
    ports:
      - "8000:8000"  # Kong proxy
      - "8001:8001"  # Kong admin API
    volumes:
      - ./config/kong.yml:/kong/kong.yml:ro
    networks:
      - pulse-network
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
      start_period: 30s
    restart: unless-stopped
    depends_on:
      - user-service
      - post-service
      - social-service

  # User Service (Node.js)
  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
      target: development
    container_name: pulse-user-service
    environment:
      NODE_ENV: development
      PORT: 8081
      DATABASE_URL: postgresql://pulse_user:pulse_user@host.docker.internal:5432/pulse_users
      JWT_SECRET: 5b41d6a0c1adfd2804d730d26f7a4fd1
      JWT_EXPIRES_IN: 24h
      JWT_REFRESH_EXPIRES_IN: 7d
      RATE_LIMIT_WINDOW_MS: 900000
      RATE_LIMIT_MAX_REQUESTS: 1000
      BCRYPT_ROUNDS: 10
      CORS_ORIGIN: http://localhost:3000
      LOG_LEVEL: debug
      ADMIN_EMAIL: admin@pulse.com
      ADMIN_PASSWORD: admin123
      GOOGLE_CLIENT_ID: 324113479892-7cq7ntoptj8cfn5u65ahssm5af55hdmd
      GOOGLE_CLIENT_SECRET: your-google-client-secret
      GOOGLE_CALLBACK_URL: http://localhost:8000/api/v1/auth/google/callback
      SESSION_SECRET: dev-session-secret-change-in-production
      SESSION_MAX_AGE: 86400000
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./user-service:/app
      - /app/node_modules
      - ./user-service/logs:/app/logs
    restart: unless-stopped
    networks:
      - pulse-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8081/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Post Service (Go)
  post-service:
    build:
      context: ./post-service
      dockerfile: Dockerfile
    container_name: pulse-post-service
    environment:
      DB_HOST: host.docker.internal
      DB_PORT: 5432
      DB_USER: pulse_user
      DB_PASSWORD: pulse_user
      DB_NAME: pulse_posts
      DB_SSLMODE: disable
      JWT_SECRET: 5b41d6a0c1adfd2804d730d26f7a4fd1
      PORT: 8082
      LOG_LEVEL: info
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped
    networks:
      - pulse-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8082/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Social Service (Node.js)
  social-service:
    build:
      context: ./social-service
      dockerfile: Dockerfile
    container_name: pulse-social-service
    ports:
      - "8085:8085"
    environment:
      NODE_ENV: development
      PORT: 8085
      DATABASE_URL: postgresql://pulse_user:pulse_user@host.docker.internal:5432/pulse_social
      REDIS_URL: redis://host.docker.internal:6379
      RABBITMQ_URL: amqp://host.docker.internal:5672
      JWT_SECRET: 5b41d6a0c1adfd2804d730d26f7a4fd1
      CORS_ORIGIN: http://localhost:3000
      LOG_LEVEL: info
    extra_hosts:
      - "host.docker.internal:host-gateway"
    volumes:
      - ./social-service:/app
      - /app/node_modules
      - ./social-service/logs:/app/logs
    restart: unless-stopped
    networks:
      - pulse-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:8085/health', (r) => {process.exit(r.statusCode === 200 ? 0 : 1)})"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  pulse-network:
    driver: bridge
