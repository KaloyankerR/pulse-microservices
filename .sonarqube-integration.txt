╔══════════════════════════════════════════════════════════════════════════════╗
║              PULSE MICROSERVICES - SONARQUBE INTEGRATION                     ║
║                         Centralized Code Quality Analysis                     ║
╚══════════════════════════════════════════════════════════════════════════════╝

┌──────────────────────────────────────────────────────────────────────────────┐
│                          ARCHITECTURE OVERVIEW                                │
└──────────────────────────────────────────────────────────────────────────────┘

                    ┌─────────────────────────────────┐
                    │   SonarQube Server (Central)    │
                    │   http://localhost:9001         │
                    │   Container: sonarqube          │
                    └───────────────┬─────────────────┘
                                    │
                    ┌───────────────┴──────────────────┐
                    │   Analysis Reports Upload        │
                    └───────────────┬──────────────────┘
                                    │
            ┌───────────────────────┼───────────────────────┐
            │                       │                       │
    ┌───────▼──────┐        ┌──────▼───────┐      ┌───────▼──────┐
    │ Node.js      │        │ Node.js      │      │ Node.js      │
    │ Services     │        │ Services     │      │ Services     │
    ├──────────────┤        ├──────────────┤      ├──────────────┤
    │ User         │        │ Notification │      │ Social       │
    │ Service      │        │ Service      │      │ Service      │
    │              │        │              │      │              │
    │ Port: 8081   │        │ Port: 8086   │      │ Port: 8085   │
    └──────────────┘        └──────────────┘      └──────────────┘
            │                       │                       │
            │ Jest + lcov.info     │ Jest + lcov.info     │ Jest + lcov.info
            │                       │                       │
    
            ┌───────────────────────────────────────────────┐
            │                                               │
    ┌───────▼──────┐                              ┌────────▼─────┐
    │ Go Services  │                              │ Go Services  │
    ├──────────────┤                              ├──────────────┤
    │ Post         │                              │ Messaging    │
    │ Service      │                              │ Service      │
    │              │                              │              │
    │ Port: 8082   │                              │ Port: 8084   │
    └──────────────┘                              └──────────────┘
            │                                              │
            │ go test + coverage.out                      │ go test + coverage.out
            │                                              │

┌──────────────────────────────────────────────────────────────────────────────┐
│                         SERVICES CONFIGURATION                                │
└──────────────────────────────────────────────────────────────────────────────┘

┌─────────────────────┬──────────────────┬─────────────────┬─────────────────┐
│ Service             │ Language         │ Project Key     │ Coverage Report │
├─────────────────────┼──────────────────┼─────────────────┼─────────────────┤
│ user-service        │ JavaScript       │ pulse-user-*    │ lcov.info       │
│ notification-service│ JavaScript       │ pulse-notific-* │ lcov.info       │
│ social-service      │ JavaScript       │ pulse-social-*  │ lcov.info       │
│ post-service        │ Go               │ pulse-post-*    │ coverage.out    │
│ messaging-service   │ Go               │ pulse-messaging*│ coverage.out    │
└─────────────────────┴──────────────────┴─────────────────┴─────────────────┘

┌──────────────────────────────────────────────────────────────────────────────┐
│                          MAKEFILE COMMANDS                                    │
└──────────────────────────────────────────────────────────────────────────────┘

╔══════════════════════════════════════════════════════════════════════════════╗
║  PRIMARY COMMANDS                                                            ║
╚══════════════════════════════════════════════════════════════════════════════╝

    make sonar-all          → Run SonarQube analysis for ALL 5 services
                              (Recommended for comprehensive analysis)

╔══════════════════════════════════════════════════════════════════════════════╗
║  INDIVIDUAL SERVICE COMMANDS                                                 ║
╚══════════════════════════════════════════════════════════════════════════════╝

    make sonar-user         → Analyze user-service only
    make sonar-notification → Analyze notification-service only
    make sonar-social       → Analyze social-service only
    make sonar-post         → Analyze post-service only
    make sonar-messaging    → Analyze messaging-service only

┌──────────────────────────────────────────────────────────────────────────────┐
│                          ANALYSIS WORKFLOW                                    │
└──────────────────────────────────────────────────────────────────────────────┘

Step 1: Start SonarQube
    $ docker-compose up -d sonarqube

Step 2: Run Analysis
    $ make sonar-all

Step 3: View Results
    → Open http://localhost:9001
    → Login: admin / admin
    → View all 5 projects

┌──────────────────────────────────────────────────────────────────────────────┐
│                           QUALITY METRICS                                     │
└──────────────────────────────────────────────────────────────────────────────┘

Each service tracks:
    ✓ Code Quality & Complexity
    ✓ Security Vulnerabilities
    ✓ Code Smells
    ✓ Test Coverage %
    ✓ Code Duplications
    ✓ Technical Debt
    ✓ Maintainability Rating (A-E)
    ✓ Reliability Rating (A-E)
    ✓ Security Rating (A-E)

┌──────────────────────────────────────────────────────────────────────────────┐
│                         DOCUMENTATION FILES                                   │
└──────────────────────────────────────────────────────────────────────────────┘

    📄 SONARQUBE_QUICKSTART.md        - Quick reference (2 min read)
    📄 docs/SONARQUBE_SETUP.md        - Complete guide (15 min read)
    📄 SONARQUBE_SETUP_SUMMARY.md     - Implementation summary

┌──────────────────────────────────────────────────────────────────────────────┐
│                            QUICK START                                        │
└──────────────────────────────────────────────────────────────────────────────┘

    # Install prerequisites (macOS)
    $ brew install sonar-scanner

    # Start SonarQube
    $ docker-compose up -d sonarqube

    # Run analysis for all services
    $ make sonar-all

    # View results
    → http://localhost:9001

┌──────────────────────────────────────────────────────────────────────────────┐
│                           TROUBLESHOOTING                                     │
└──────────────────────────────────────────────────────────────────────────────┘

    SonarQube not accessible?
        $ docker-compose restart sonarqube

    Scanner not found?
        $ brew install sonar-scanner

    Coverage at 0%?
        $ cd <service> && npm run test:coverage

    Need help?
        → See docs/SONARQUBE_SETUP.md

╔══════════════════════════════════════════════════════════════════════════════╗
║                               STATUS: ✅ READY                               ║
╚══════════════════════════════════════════════════════════════════════════════╝

    All 5 microservices are configured for centralized SonarQube analysis.
    Run 'make sonar-all' to start analyzing your code quality!

